{"version":3,"sources":["BetContext.jsx","DisplayBoard.jsx","Nav.jsx","ChangeTheme.jsx","App.jsx","index.js"],"names":["BetContext","React","createContext","BetContextProvider","changeTheme","setState","lightTheme","state","lightOption","modeFont","backgroundHex","buttonHex","darkOption","bind","Provider","value","this","props","children","Component","DisplayBoard","stakes","unit","bet_price","winning_average","handlePrice","handleStake","clearPrice","clearStake","context","applyTheme","className","style","backgroundColor","color","onClick","contextType","Nav","href","ChangeTheme","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08092029.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport const BetContext = React.createContext();\r\n\r\nclass BetContextProvider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lightTheme: true,\r\n      lightOption: {\r\n        modeFont: '#022c43',\r\n        backgroundHex: '#b590ca',\r\n        buttonHex: '#fdfdf6',\r\n      },\r\n      darkOption: {\r\n        modeFont: '#222831',\r\n        backgroundHex: '#0f4c81',\r\n        buttonHex: '#e9e1cc',\r\n      },\r\n    };\r\n    this.changeTheme = this.changeTheme.bind(this);\r\n  }\r\n\r\n  changeTheme = () => {\r\n    this.setState({\r\n      lightTheme: !this.state.lightTheme\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BetContext.Provider value={{ ...this.state, changeTheme: this.changeTheme }}>\r\n          {this.props.children}\r\n        </BetContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BetContextProvider;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { BetContext } from './BetContext';\r\n\r\nclass DisplayBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stakes: 4,\r\n      unit: 32.08,\r\n      bet_price: 0,\r\n      winning_average: 22,\r\n    };\r\n    this.handlePrice = this.handlePrice.bind(this);\r\n    this.handleStake = this.handleStake.bind(this);\r\n    this.clearPrice = this.clearPrice.bind(this);\r\n    this.clearStake = this.clearStake.bind(this);\r\n  }\r\n  // event handler for stake clicks\r\n  handleStake() {\r\n    this.setState({\r\n      stakes: this.state.stakes * 2,\r\n    });\r\n  }\r\n  // event handler for price clicks\r\n  handlePrice() {\r\n    this.setState({\r\n      bet_price: this.state.bet_price + this.state.unit,\r\n    });\r\n  }\r\n  // event for clearing price\r\n  clearPrice() {\r\n    this.setState({\r\n      bet_price: this.state.bet_price * 0,\r\n    });\r\n  }\r\n  // event for clearing stake\r\n  clearStake() {\r\n    this.setState({\r\n      stakes: this.state.stakes * 0 + 4,\r\n    });\r\n  }\r\n\r\n  static contextType = BetContext;\r\n\r\n  render() {\r\n    const { lightTheme, lightOption, darkOption } = this.context;\r\n    const applyTheme = lightTheme ? lightOption : darkOption;\r\n    return (\r\n      <div className='main-div' style={{ backgroundColor: applyTheme.backgroundHex }} >\r\n        <div className=\"info-btns\">\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='my-button' > {this.state.stakes} </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='my-button' > Bet price: {this.state.winning_average}\r\n          </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='my-button' > Unit price: {this.state.unit}\r\n          </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='my-button' > {this.state.bet_price} </button>\r\n        </div>\r\n        <div className='sub-div'>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='event-buttons' onClick={this.handleStake} > Add Stakes </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='event-buttons' onClick={this.clearStake} > Clear Stakes </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='event-buttons' onClick={this.handlePrice} > Add Price </button>\r\n          <button style={{ color: applyTheme.modeFont, backgroundColor: applyTheme.buttonHex, }} className='event-buttons' onClick={this.clearPrice} > Clear Price </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayBoard;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { BetContext } from './BetContext';\r\n\r\nclass Nav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  static contextType = BetContext;\r\n\r\n  render() {\r\n    const { lightTheme, lightOption, darkOption } = this.context;\r\n    const applyTheme = lightTheme ? lightOption : darkOption;\r\n\r\n    return (\r\n      <div>\r\n        <nav style={{ backgroundColor: applyTheme.backgroundHex, color: applyTheme.modeFont }}>\r\n          <ul className='nav-list'>\r\n            <li>\r\n              <a href={{}}>Home</a>\r\n            </li>\r\n            <li>\r\n              <a href={{}}>About</a>\r\n            </li>\r\n            <li>\r\n              <a href={{}}>Blog</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { BetContext } from \"./BetContext\";\r\n\r\nclass ChangeTheme extends Component {\r\n    static contextType = BetContext;\r\n    render() {\r\n        const { changeTheme } = this.context;\r\n        return (\r\n            <div className=\"activate\">\r\n                <em>Click this <button onClick={changeTheme}> Theme Mode</button> button to toggle <em>Light Mode</em> and Dark Mode.</em>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangeTheme;","import React, { Component } from \"react\";\r\nimport DisplayBoard from \"./DisplayBoard\";\r\nimport Nav from \"./Nav\";\r\nimport BetContextProvider from \"./BetContext\";\r\nimport ChangeTheme from \"./ChangeTheme\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BetContextProvider>\r\n          <Nav />\r\n          <ChangeTheme />\r\n          <DisplayBoard />\r\n        </BetContextProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}